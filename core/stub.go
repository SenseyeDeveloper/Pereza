package core

func Stub(packageName string, types []string) []byte {
	const n = byte('\n')

	header := `// TEMPORARY AUTOGENERATED FILE: perezajson stub code to make the package
// compilable during generation.

package `

	//	body := `func () MarshalJSON() ([]byte, error) { return nil, nil }
	//func (*) UnmarshalJSON([]byte) error  { return nil }
	//`

	const headerSize = 116 // len(header)
	const headerNextSpaceSize = 2
	const bodySize = 111 // len(body)

	fullSize := headerSize +
		len(packageName) +
		headerNextSpaceSize +
		bodySize*len(types) +
		stringSliceSize(types)*2 // 2 is func: MarshalJSON & UnmarshalJSON

	content := make([]byte, 0, fullSize)

	content = append(content, header...)
	content = append(content, packageName...)

	content = append(content, n, n)

	for _, t := range types {
		content = append(content, "func ("...)
		content = append(content, t...)
		content = append(content, ") MarshalJSON() ([]byte, error) { return nil, nil }\n"...)
		content = append(content, "func (*"...)
		content = append(content, t...)
		content = append(content, ") UnmarshalJSON([]byte) error  { return nil }\n"...)
	}

	return content
}
