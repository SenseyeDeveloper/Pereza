package gen

import (
	"io"
)

type Generator struct {
	packagePath string
	packageName string
	hashString  string
}

func NewGenerator(packagePath, packageName, filename string) *Generator {
	ret := &Generator{
		packagePath: packagePath,
		packageName: packageName,
		hashString:  unique(filename),
	}

	return ret
}

func (g *Generator) Add(obj interface{}) {

}

// Run runs the generator and outputs generated code to out.
func (g *Generator) Run(out io.Writer) error {
	out.Write(g.header())

	return nil
}

// header prints package declaration and imports.
func (g *Generator) header() []byte {
	const header = `// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package `

	result := make([]byte, 0, len(header) + len(g.packageName) + 2)

	result = append(result, header...)
	result = append(result, g.packageName...)
	result = append(result, '\n', '\n')

	return result
}